// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package main

import (
	"context"
	"github.com/gin-gonic/gin"
	"github.com/google/wire"
	"github.com/sfshf/sprout/app/govern/api"
	"github.com/sfshf/sprout/app/govern/bll"
	"github.com/sfshf/sprout/repo"
)

import (
	_ "net/http/pprof"
)

// Injectors from wire.go:

func NewGinEngine(ctx context.Context) (*gin.Engine, func(), error) {
	jwtAuth := NewAuth()
	database, err := NewMongoDB(ctx)
	if err != nil {
		return nil, nil, err
	}
	casbin := repo.NewCasbinRepo(ctx, database)
	syncedEnforcer, cleanup := NewCasbin(ctx, casbin)
	staff := repo.NewStaffRepo(ctx, database)
	captcha := NewPictureCaptcha()
	bllStaff := bll.NewStaff(staff, jwtAuth, captcha)
	apiStaff := api.NewStaff(bllStaff)
	bllCasbin := bll.NewCasbin(casbin)
	apiCasbin := api.NewCasbin(bllCasbin)
	user := repo.NewUserRepo(ctx, database)
	bllUser := bll.NewUser(user)
	apiUser := api.NewUser(bllUser)
	controller := &Controller{
		Auther:    jwtAuth,
		Enforcer:  syncedEnforcer,
		Staff:     apiStaff,
		Casbin:    apiCasbin,
		User:      apiUser,
		StaffRepo: staff,
	}
	engine := NewRouter(controller)
	return engine, func() {
		cleanup()
	}, nil
}

// wire.go:

var (
	ApiSet       = wire.NewSet(api.NewStaff, api.NewCasbin, api.NewUser)
	BllSet       = wire.NewSet(bll.NewStaff, bll.NewCasbin, bll.NewUser)
	RepoSet      = wire.NewSet(repo.NewStaffRepo, repo.NewCasbinRepo, repo.NewRoleRepo, repo.NewUserRepo, repo.NewAccessLogRepo)
	ComponentSet = wire.NewSet(
		NewAuth,
		NewCasbin,
		NewPictureCaptcha,
		NewMongoDB,
		RepoSet,
		InitRootAccount,
		ApiSet,
		BllSet, wire.Struct(new(Controller), "*"), NewRouter,
	)
)
