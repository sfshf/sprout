// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "gavin",
            "url": "http://github.com/sfshf",
            "email": "sfshf@github.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://github.com/sfshf/sprout/blob/main/LICENSE"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of api.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api"
                ],
                "summary": "Get a list of api.",
                "operationId": "api-list",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "createdAtBegin",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "createdAtEnd",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "creator",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "enable",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "group",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "method",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "orderBy",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "path",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "perPage",
                        "in": "query"
                    }
                ],
                "responses": {
                    "1000": {
                        "description": "feasible and predictable errors.",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "2000": {
                        "description": "api list.",
                        "schema": {
                            "$ref": "#/definitions/bll.ListApiResp"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a new api.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api"
                ],
                "summary": "Add a new api.",
                "operationId": "api-add",
                "parameters": [
                    {
                        "description": "required attributes to add a new api.",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/bll.AddApiReq"
                        }
                    }
                ],
                "responses": {
                    "1000": {
                        "description": "feasible and predictable errors.",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "2000": {
                        "description": "successful action.",
                        "schema": {
                            "type": "null"
                        }
                    }
                }
            }
        },
        "/api/:id": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get the profile of a api.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api"
                ],
                "summary": "Get infos of an api.",
                "operationId": "api-profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id of the api.",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "1000": {
                        "description": "feasible and predictable errors.",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "2000": {
                        "description": "profile of the api.",
                        "schema": {
                            "$ref": "#/definitions/bll.ProfileApiResp"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a specific api.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api"
                ],
                "summary": "Update a specific api.",
                "operationId": "api-update",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id of the api to update.",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "attributes need to update.",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/bll.UpdateApiReq"
                        }
                    }
                ],
                "responses": {
                    "1000": {
                        "description": "feasible and predictable errors.",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "2000": {
                        "description": "successful action.",
                        "schema": {
                            "type": "null"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Evict a specific api.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api"
                ],
                "summary": "Evict a specific api.",
                "operationId": "api-evict",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id of the api to evict.",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "1000": {
                        "description": "feasible and predictable errors.",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "2000": {
                        "description": "successful action.",
                        "schema": {
                            "type": "null"
                        }
                    }
                }
            }
        },
        "/api/:id/enable": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Enable or disable an api.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api"
                ],
                "summary": "Enable or disable an api.",
                "operationId": "api-enable",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id of the api.",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "true for enable, or false for disable.",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/bll.EnableApiReq"
                        }
                    }
                ],
                "responses": {
                    "1000": {
                        "description": "feasible and predictable errors.",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "2000": {
                        "description": "successful action.",
                        "schema": {
                            "type": "null"
                        }
                    }
                }
            }
        },
        "/casbin/priority": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get predefined priority range of roles.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "casbin"
                ],
                "summary": "Get predefined priority range of roles.",
                "operationId": "casbin-role-priority",
                "responses": {
                    "1000": {
                        "description": "feasible and predictable errors.",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "2000": {
                        "description": "minimum and maximum value of the predefined priority range.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/menu": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of menu.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "menu"
                ],
                "summary": "Get a list of menu.",
                "operationId": "menu-list",
                "parameters": [
                    {
                        "type": "string",
                        "name": "orderBy",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "perPage",
                        "in": "query"
                    }
                ],
                "responses": {
                    "1000": {
                        "description": "feasible and predictable errors.",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "2000": {
                        "description": "menu list.",
                        "schema": {
                            "$ref": "#/definitions/bll.ListMenuResp"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a new menu, with widgets if has.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "menu"
                ],
                "summary": "Add a new menu, with widgets if has.",
                "operationId": "menu-add",
                "parameters": [
                    {
                        "description": "required attributes to add a new menu.",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/bll.AddMenuReq"
                        }
                    }
                ],
                "responses": {
                    "1000": {
                        "description": "feasible and predictable errors.",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "2000": {
                        "description": "successful action.",
                        "schema": {
                            "type": "null"
                        }
                    }
                }
            }
        },
        "/menu/:id": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get the profile of a menu.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "menu"
                ],
                "summary": "Get infos of a menu.",
                "operationId": "menu-profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id of the menu.",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "1000": {
                        "description": "feasible and predictable errors.",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "2000": {
                        "description": "profile of the api.",
                        "schema": {
                            "$ref": "#/definitions/bll.ProfileMenuResp"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a specific menu.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "menu"
                ],
                "summary": "Update a specific menu.",
                "operationId": "menu-update",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id of the menu to update.",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "attributes need to update.",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/bll.UpdateMenuReq"
                        }
                    }
                ],
                "responses": {
                    "1000": {
                        "description": "feasible and predictable errors.",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "2000": {
                        "description": "successful action.",
                        "schema": {
                            "type": "null"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Evict a specific menu.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "menu"
                ],
                "summary": "Evict a specific menu.",
                "operationId": "menu-evict",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id of the menu to evict.",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "1000": {
                        "description": "feasible and predictable errors.",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "2000": {
                        "description": "successful action.",
                        "schema": {
                            "type": "null"
                        }
                    }
                }
            }
        },
        "/menu/:id/enable": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Enable or disable a menu.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "menu"
                ],
                "summary": "Enable or disable a menu.",
                "operationId": "menu-enable",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id of the menu.",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "true for enable, or false for disable.",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/bll.EnableMenuReq"
                        }
                    }
                ],
                "responses": {
                    "1000": {
                        "description": "feasible and predictable errors.",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "2000": {
                        "description": "successful action.",
                        "schema": {
                            "type": "null"
                        }
                    }
                }
            }
        },
        "/picCaptcha": {
            "get": {
                "description": "Get a new picture captcha id and base64 string of the picture, and delete the obsolete captcha of the obsolete_id, if has.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staff"
                ],
                "summary": "Get a picture captcha.",
                "operationId": "get-pic-captcha",
                "parameters": [
                    {
                        "type": "string",
                        "description": "an obsolete captcha id.",
                        "name": "obsolete_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "1000": {
                        "description": "feasible and predictable errors.",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "2000": {
                        "description": "captcha id and picture.",
                        "schema": {
                            "$ref": "#/definitions/bll.GetPicCaptchaResp"
                        }
                    }
                }
            }
        },
        "/picCaptchaAnswer": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get the answer code of a picture captcha with the captcha id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staff"
                ],
                "summary": "Get the answer code of a picture captcha.",
                "operationId": "get-pic-captcha-answer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "a captcha id.",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "1000": {
                        "description": "Invalid Token, Invalid Captcha, Unauthorized, or other errors.",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "2000": {
                        "description": "captcha answer code",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/role": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of role.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "role"
                ],
                "summary": "Get a list of role.",
                "operationId": "role-list",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "createdAtBegin",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "createdAtEnd",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "creator",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "enable",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "group",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "orderBy",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "perPage",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "seq",
                        "in": "query"
                    }
                ],
                "responses": {
                    "1000": {
                        "description": "feasible and predictable errors.",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "2000": {
                        "description": "role list.",
                        "schema": {
                            "$ref": "#/definitions/bll.ListRoleResp"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a new role.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "role"
                ],
                "summary": "Add a new role.",
                "operationId": "role-add",
                "parameters": [
                    {
                        "description": "required attributes to add a new role.",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/bll.AddRoleReq"
                        }
                    }
                ],
                "responses": {
                    "1000": {
                        "description": "feasible and predictable errors.",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "2000": {
                        "description": "successful action.",
                        "schema": {
                            "type": "null"
                        }
                    }
                }
            }
        },
        "/role/:id": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get the profile of a role.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "role"
                ],
                "summary": "Get infos of a role.",
                "operationId": "role-profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id of the role.",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "1000": {
                        "description": "feasible and predictable errors.",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "2000": {
                        "description": "profile of the role.",
                        "schema": {
                            "$ref": "#/definitions/bll.ProfileRoleResp"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a specific role.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "role"
                ],
                "summary": "Update a specific role.",
                "operationId": "role-update",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id of the role to evict.",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "attributes need to update.",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/bll.UpdateRoleReq"
                        }
                    }
                ],
                "responses": {
                    "1000": {
                        "description": "feasible and predictable errors.",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "2000": {
                        "description": "successful action.",
                        "schema": {
                            "type": "null"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Evict a specific role.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "role"
                ],
                "summary": "Evict a specific role.",
                "operationId": "role-evict",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id of the role to evict.",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "1000": {
                        "description": "feasible and predictable errors.",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "2000": {
                        "description": "successful action",
                        "schema": {
                            "type": "null"
                        }
                    }
                }
            }
        },
        "/role/:id/authorize": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Allocate authorities to a specific role using menu-widgets pairs.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "role"
                ],
                "summary": "Allocate authorities to a specific role.",
                "operationId": "role-allocate-authority",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id of the role to be allocated authorities.",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "menu-widgets pairs.",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/bll.AuthorizeReq"
                        }
                    }
                ],
                "responses": {
                    "1000": {
                        "description": "feasible and predictable errors.",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "2000": {
                        "description": "successful action.",
                        "schema": {
                            "type": "null"
                        }
                    }
                }
            }
        },
        "/role/:id/enable": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Enable or disable a role.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "role"
                ],
                "summary": "Enable or disable a role.",
                "operationId": "role-enable",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id of the role.",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "true for enable, or false for disable.",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/bll.EnableRoleReq"
                        }
                    }
                ],
                "responses": {
                    "1000": {
                        "description": "feasible and predictable errors.",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "2000": {
                        "description": "successful action.",
                        "schema": {
                            "type": "null"
                        }
                    }
                }
            }
        },
        "/signIn": {
            "patch": {
                "description": "Sign in with account and password, supporting picture captcha authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staff"
                ],
                "summary": "Sign in.",
                "operationId": "sign-in",
                "parameters": [
                    {
                        "description": "required attributes to sign in.",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/bll.SignInReq"
                        }
                    }
                ],
                "responses": {
                    "1000": {
                        "description": "feasible and predictable errors.",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "2000": {
                        "description": "sign in token and expiry time.",
                        "schema": {
                            "$ref": "#/definitions/bll.SignInResp"
                        }
                    }
                }
            }
        },
        "/signOff/:id": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Sign off the session account, or some specific account only by root account.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staff"
                ],
                "summary": "Sign off.",
                "operationId": "sign-off",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id of the account to sign off.",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "1000": {
                        "description": "feasible and predictable errors.",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "2000": {
                        "description": "successful action.",
                        "schema": {
                            "type": "null"
                        }
                    }
                }
            }
        },
        "/signOut": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Sign out the session account.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staff"
                ],
                "summary": "Sign out.",
                "operationId": "sign-out",
                "responses": {
                    "1000": {
                        "description": "feasible and predictable errors.",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "2000": {
                        "description": "successful action.",
                        "schema": {
                            "type": "null"
                        }
                    }
                }
            }
        },
        "/signUp": {
            "post": {
                "description": "Sign up a new staff account.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staff"
                ],
                "summary": "Sign up.",
                "operationId": "sign-up",
                "parameters": [
                    {
                        "description": "required attributes to sign up.",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/bll.SignUpReq"
                        }
                    }
                ],
                "responses": {
                    "1000": {
                        "description": "feasible and predictable errors.",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "2000": {
                        "description": "successful action.",
                        "schema": {
                            "type": "null"
                        }
                    }
                }
            }
        },
        "/staff": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of staff accounts.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staff"
                ],
                "summary": "Get a list of staff accounts.",
                "operationId": "staff-list",
                "parameters": [
                    {
                        "type": "string",
                        "name": "account",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "gender",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "lastSignInIp",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "lastSignInTimeBegin",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "lastSignInTimeEnd",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "orderBy",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "perPage",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "phone",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "role",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "signIn",
                        "in": "query"
                    }
                ],
                "responses": {
                    "1000": {
                        "description": "feasible and predictable errors.",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "2000": {
                        "description": "staff list.",
                        "schema": {
                            "$ref": "#/definitions/bll.ListStaffResp"
                        }
                    }
                }
            }
        },
        "/staff/:id": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get the profile of a staff account.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staff"
                ],
                "summary": "Get infos of a staff account.",
                "operationId": "staff-profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id of the staff account.",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "1000": {
                        "description": "feasible and predictable errors.",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "2000": {
                        "description": "profile of the staff.",
                        "schema": {
                            "$ref": "#/definitions/bll.ProfileStaffResp"
                        }
                    }
                }
            }
        },
        "/staff/:id/email": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update the email of a staff account.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staff"
                ],
                "summary": "Update the email of a staff account.",
                "operationId": "staff-update-email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id of the staff account to update.",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "attributes need to update the email.",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/bll.UpdateStaffEmailReq"
                        }
                    }
                ],
                "responses": {
                    "1000": {
                        "description": "feasible and predictable errors.",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "2000": {
                        "description": "successful action.",
                        "schema": {
                            "type": "null"
                        }
                    }
                }
            }
        },
        "/staff/:id/enable": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Enable or disable a staff account.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staff"
                ],
                "summary": "Enable or disable a staff account.",
                "operationId": "staff-enable",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id of the staff account.",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "true for enable, or false for disable.",
                        "name": "enable",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "1000": {
                        "description": "feasible and predictable errors.",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "2000": {
                        "description": "successful action.",
                        "schema": {
                            "type": "null"
                        }
                    }
                }
            }
        },
        "/staff/:id/password": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update the password of a staff account.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staff"
                ],
                "summary": "Update the password of a staff account.",
                "operationId": "staff-update-password",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id of the staff account to update.",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "attributes need to update the password.",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/bll.UpdateStaffPasswordReq"
                        }
                    }
                ],
                "responses": {
                    "1000": {
                        "description": "feasible and predictable errors.",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "2000": {
                        "description": "successful action.",
                        "schema": {
                            "type": "null"
                        }
                    }
                }
            }
        },
        "/staff/:id/phone": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update the phone of a staff account.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staff"
                ],
                "summary": "Update the phone of a staff account.",
                "operationId": "staff-update-phone",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id of the staff account to update.",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "attributes need to update the phone.",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/bll.UpdateStaffPasswordReq"
                        }
                    }
                ],
                "responses": {
                    "1000": {
                        "description": "feasible and predictable errors.",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "2000": {
                        "description": "successful action.",
                        "schema": {
                            "type": "null"
                        }
                    }
                }
            }
        },
        "/staff/:id/roles": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update the roles of a staff account.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staff"
                ],
                "summary": "Update the roles of a staff account.",
                "operationId": "staff-update-roles",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id of the staff account to update.",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "attributes need to update the roles.",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/bll.UpdateStaffPasswordReq"
                        }
                    }
                ],
                "responses": {
                    "1000": {
                        "description": "feasible and predictable errors.",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "2000": {
                        "description": "successful action.",
                        "schema": {
                            "type": "null"
                        }
                    }
                }
            }
        },
        "/staff/:id/signInIpWhitelist": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update the sign-in ip-whitelist of a staff account.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staff"
                ],
                "summary": "Update the sign-in ip-whitelist of a staff account.",
                "operationId": "staff-update-signInIpWhitelist",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id of the staff account to update.",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "attributes need to update the sign-in ip-whitelist.",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/bll.UpdateStaffSignInIpWhitelistReq"
                        }
                    }
                ],
                "responses": {
                    "1000": {
                        "description": "feasible and predictable errors.",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "2000": {
                        "description": "successful action.",
                        "schema": {
                            "type": "null"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "bll.AddApiReq": {
            "type": "object",
            "required": [
                "method",
                "path"
            ],
            "properties": {
                "enable": {
                    "type": "boolean"
                },
                "group": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "bll.AddMenuReq": {
            "type": "object",
            "required": [
                "name",
                "route",
                "seq"
            ],
            "properties": {
                "enable": {
                    "type": "boolean"
                },
                "icon": {
                    "type": "string"
                },
                "memo": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parentID": {
                    "type": "string"
                },
                "route": {
                    "type": "string"
                },
                "seq": {
                    "type": "integer"
                },
                "show": {
                    "type": "boolean"
                },
                "widgets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/bll.Widget"
                    }
                }
            }
        },
        "bll.AddRoleReq": {
            "type": "object",
            "required": [
                "name",
                "seq"
            ],
            "properties": {
                "enable": {
                    "type": "boolean"
                },
                "group": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "memo": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "seq": {
                    "type": "integer"
                }
            }
        },
        "bll.AuthorizeReq": {
            "type": "object",
            "required": [
                "menuWidgetMap"
            ],
            "properties": {
                "menuWidgetMap": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "bll.EnableApiReq": {
            "type": "object",
            "required": [
                "enable"
            ],
            "properties": {
                "enable": {
                    "type": "boolean"
                }
            }
        },
        "bll.EnableMenuReq": {
            "type": "object",
            "required": [
                "enable"
            ],
            "properties": {
                "enable": {
                    "type": "boolean"
                }
            }
        },
        "bll.EnableRoleReq": {
            "type": "object",
            "required": [
                "enable"
            ],
            "properties": {
                "enable": {
                    "type": "boolean"
                }
            }
        },
        "bll.GetPicCaptchaResp": {
            "type": "object",
            "properties": {
                "picCaptchaB64s": {
                    "type": "string"
                },
                "picCaptchaId": {
                    "type": "string"
                }
            }
        },
        "bll.ListApiResp": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "bll.ListMenuResp": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "bll.ListRoleResp": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "bll.ListStaffResp": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "bll.ProfileApiResp": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "integer"
                },
                "creator": {
                    "type": "string"
                },
                "enable": {
                    "type": "boolean"
                },
                "group": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "integer"
                }
            }
        },
        "bll.ProfileMenuResp": {
            "type": "object"
        },
        "bll.ProfileRoleResp": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "integer"
                },
                "creator": {
                    "type": "string"
                },
                "enable": {
                    "type": "boolean"
                },
                "group": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "memo": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "seq": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "integer"
                }
            }
        },
        "bll.ProfileStaffResp": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "enable": {
                    "type": "boolean"
                },
                "gender": {
                    "type": "string"
                },
                "lastSignInIp": {
                    "type": "string"
                },
                "lastSignInTime": {
                    "type": "integer"
                },
                "phone": {
                    "type": "string"
                },
                "realName": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "signInIpWhiteList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "signUpAt": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "integer"
                }
            }
        },
        "bll.SignInReq": {
            "type": "object",
            "required": [
                "picCaptchaAnswer",
                "picCaptchaId"
            ],
            "properties": {
                "account": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "picCaptchaAnswer": {
                    "type": "string"
                },
                "picCaptchaId": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "integer"
                }
            }
        },
        "bll.SignInResp": {
            "type": "object",
            "properties": {
                "expiresAt": {
                    "type": "integer"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "bll.SignUpReq": {
            "type": "object",
            "required": [
                "email",
                "timestamp"
            ],
            "properties": {
                "account": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "realName": {
                    "type": "string"
                },
                "signInIpWhitelist": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "timestamp": {
                    "type": "integer"
                }
            }
        },
        "bll.UpdateApiReq": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "bll.UpdateMenuReq": {
            "type": "object"
        },
        "bll.UpdateRoleReq": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "memo": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "seq": {
                    "type": "integer"
                }
            }
        },
        "bll.UpdateStaffEmailReq": {
            "type": "object",
            "required": [
                "newEmail"
            ],
            "properties": {
                "captchaFromOldEmail": {
                    "type": "string"
                },
                "newEmail": {
                    "type": "string"
                }
            }
        },
        "bll.UpdateStaffPasswordReq": {
            "type": "object",
            "properties": {
                "newPassword": {
                    "type": "string"
                },
                "newPasswordRepeat": {
                    "type": "string"
                },
                "oldPassword": {
                    "type": "string"
                }
            }
        },
        "bll.UpdateStaffSignInIpWhitelistReq": {
            "type": "object",
            "properties": {
                "signInIpWhitelist": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "bll.Widget": {
            "type": "object",
            "required": [
                "api",
                "name",
                "seq"
            ],
            "properties": {
                "api": {
                    "type": "string"
                },
                "enable": {
                    "type": "boolean"
                },
                "icon": {
                    "type": "string"
                },
                "memo": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parentID": {
                    "type": "string"
                },
                "seq": {
                    "type": "integer"
                },
                "show": {
                    "type": "boolean"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "0.0.1-beta",
	Host:        "localhost:8000",
	BasePath:    "/api/v1",
	Schemes:     []string{},
	Title:       "Govern APIs",
	Description: "This is a back-end government app.",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
